name: 'VEST-AI PR Reviewer'
description: 'VEST-AI PR Reviewer'
branding:
  icon: 'git-merge'
  color: 'orange'
author: 'VEST'
inputs:
  debug:
    required: false
    description: 'Enable debug mode'
    default: 'false'
  max_files:
    required: false
    description:
      'Max files to summarize and review. Less than or equal to 0 means no
      limit.'
    default: '150'
  review_simple_changes:
    required: false
    description: 'Review even when the changes are simple'
    default: 'false'
  review_comment_lgtm:
    required: false
    description: 'Leave comments even if the patch is LGTM'
    default: 'false'
  path_filters:
    required: false
    description: |
      The path filters, e.g., "src/**.py", "!dist/**", each line will be considered as one pattern.
      See also
      - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
      - https://github.com/isaacs/minimatch
    default: |
      !dist/**
      !**/*.app
      !**/*.bin
      !**/*.bz2
      !**/*.class
      !**/*.db
      !**/*.dll
      !**/*.dylib
      !**/*.exe
      !**/*.jar
      !**/*.o
      !**/*.obj
      !**/*.out
      !**/*.pyc
      !**/*.pyo
      !**/*.so
      !**/*.war
      !**/*.zip
      !**/*.br
      !**/*.gz
      !**/*.tar
      !**/*.7z
      !**/*.pdf
      !**/*.docx
      !**/*.xlsx
      !**/*.pptx
      !**/*.epub
      !**/*.mobi
      !**/*.ttf
      !**/*.otf
      !**/*.eot
      !**/*.ico
      !**/*.icns
      !**/*.jpeg
      !**/*.jpg
      !**/*.png
      !**/*.gif
      !**/*.bmp
      !**/*.tiff
      !**/*.webm
      !**/*.woff
      !**/*.woff2
      !**/*.dot
      !**/*.md5sum
      !**/*.wasm
      !**/*.snap
      !**/*.parquet
      !**/gen/**
      !**/_gen/**
      !**/generated/**
      !**/@generated/**
      !**/vendor/**
      !**/*.min.js
      !**/*.min.js.map
      !**/*.min.js.css
      !**/*.tfstate
      !**/*.tfstate.backup
  disable_review:
    required: false
    description: 'Only provide the summary and skip the code review.'
    default: 'false'
  disable_release_notes:
    required: false
    description: 'Disable release notes'
    default: 'false'
  anthropic_light_model:
    required: false
    description:
      'Model to use for simple tasks like summarizing diff on a file.'
    default: 'claude-3-haiku-20241022'
  anthropic_heavy_model:
    required: false
    description: 'Model to use for complex tasks such as code reviews.'
    default: 'claude-3-sonnet-20241022'
  model_temperature:
    required: false
    description: 'Temperature for Claude model'
    default: '0.05'
  api_retries:
    required: false
    description:
      'How many times to retry Anthropic API in case of timeouts or errors?'
    default: '5'
  api_timeout_ms:
    required: false
    description: 'Timeout for Anthropic API call in millis'
    default: '360000'
  api_concurrency_limit:
    required: false
    description: 'How many concurrent API calls to make to Anthropic servers?'
    default: '6'
  github_concurrency_limit:
    required: false
    description: 'How many concurrent API calls to make to GitHub?'
    default: '6'
  system_message:
    required: false
    description: 'System message to be sent to Claude'
    default: |
      You are `@vest-ai` (aka `github-actions[bot]`), a language model 
      trained by Anthropic. Your purpose is to act as a highly experienced 
      software engineer and provide a thorough review of the code hunks
      and suggest code snippets to improve key areas such as:
        - Logic
        - Security
        - Performance
        - Data races
        - Consistency
        - Error handling
        - Maintainability
        - Modularity
        - Complexity
        - Best practices
        - Design patterns
        - Code style
        - Documentation
        - Testing
        - Edge cases
        - Potential bugs
        - Performance bottlenecks
        - Memory leaks
        - Thread safety
        - Resource management
        - Error propagation
        - API design
        - Dependency management
        - Configuration
        - Logging
        - Monitoring
        - Scalability
        - Reliability
        - Security vulnerabilities
        - Input validation
        - Output sanitization
        - Authentication
        - Authorization
        - Data validation
        - Exception handling
        - Resource cleanup
        - Memory management
        - Thread synchronization
        - Deadlock prevention
        - Race condition prevention
        - Code organization
        - Code reusability
        - Code maintainability
        - Code readability
        - Code testability
        - Code coverage
        - Code documentation
        - Code comments
        - Code style consistency
        - Code formatting
        - Code optimization
        - Code performance
        - Code security
        - Code reliability
        - Code scalability
        - Code maintainability
  summarize:
    required: false
    description: 'The prompt for summarizing the changes'
    default: |
      Please analyze the code changes and provide a concise summary that covers:
      1. Overview of main changes and their purpose
      2. Breaking changes or API modifications
      3. Bug fixes and their impact
      4. Performance improvements
      5. Security enhancements
      6. Dependencies updated
      7. Test coverage changes
      8. Documentation updates
      9. Configuration changes
      10. Any other relevant details

      Focus on the practical impact and importance of changes. Be brief but thorough.
  summarize_release_notes:
    required: false
    description:
      'The prompt for generating release notes in the same chat as summarize
      stage'
    default: |
      Craft concise release notes for the pull request. 
      Focus on the purpose and user impact, categorizing changes as "New Feature", "Bug Fix", 
      "Documentation", "Refactor", "Style", "Test", "Chore", or "Revert". Provide a bullet-point list, 
      e.g., "- New Feature: Added search functionality to the UI". Limit your response to 50-100 words 
      and emphasize features visible to the end-user while omitting code-level details.
  language:
    required: false
    description: ISO code for the response language
    default: en-US
  bot_icon:
    required: false
    description: 'The icon for the bot'
    default: '<img src="https://avatars.githubusercontent.com/in/347564?s=41" alt="Image description" width="20" height="20">'
runs:
  using: 'node16'
  main: 'dist/index.js'
